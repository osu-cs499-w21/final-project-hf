image: "node:current-alpine"

stages:
  - build
  - test
  - docker_build

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .next/
    - .npm/

.uses_docker: &uses_docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - echo "Installing dependencies"
    - npm ci --cache .npm --prefer-offline
    - echo "Building NextJS site"
    - npm run build

lint:
  stage: test
  script:
    - npm run lint

test:
  stage: test
  script:
    - npm run test:verbose

type-check:
  stage: test
  script:
    - npm run type-check

docker_build:
  <<: *uses_docker
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  stage: docker_build
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
  script:
    - docker build
        --target builder
        --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-latest-builder 
        --build-arg BUILDKIT_INLINE_CACHE=1 
        --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-builder 
        --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-latest-builder 
        "."
    - docker build
        --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-latest-builder
        --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-latest 
        --build-arg BUILDKIT_INLINE_CACHE=1 
        --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA 
        --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-latest 
        "."
  after_script:
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-builder
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-latest-builder
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-latest
